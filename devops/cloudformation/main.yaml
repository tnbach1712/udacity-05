Parameters:
  ProjectName:
    Type: String
    Default: bachtn-udaticy-05
  Region:
    Type: String
    Default: us-east-1
  VPCcidr:
    Type: String
    Default: 10.0.0.0/16
  Subnet1cidr:
    Type: String
    Default: 10.0.0.0/24
  Subnet2cidr:
    Type: String
    Default: 10.0.1.0/24
  Subnet3cidr:
    Type: String
    Default: 10.0.2.0/24
  Subnet4cidr:
    Type: String
    Default: 10.0.3.0/24

Mappings:
  ServicePrincipalPartitionMap:
    aws:
      EC2: ec2.amazonaws.com
      EKS: eks.amazonaws.com
      EKSFargatePods: eks-fargate-pods.amazonaws.com
    aws-cn:
      EC2: ec2.amazonaws.com.cn
      EKS: eks.amazonaws.com
      EKSFargatePods: eks-fargate-pods.amazonaws.com
    aws-us-gov:
      EC2: ec2.amazonaws.com
      EKS: eks.amazonaws.com
      EKSFargatePods: eks-fargate-pods.amazonaws.com

Resources:
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCcidr
      EnableDnsSupport: "true"
      EnableDnsHostnames: "true"
      InstanceTenancy: default
      Tags:
        - Key: env
          Value: !Sub "vpc"
        - Key: "Name"
          Value: !Sub  "${ProjectName}-VPC"

  PublicSubnetOne:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Sub "${Region}a"
      CidrBlock: !Ref Subnet1cidr
      MapPublicIpOnLaunch: true
      VpcId: !Ref Vpc
      Tags:
        - Key: kubernetes.io/role/elb
          Value: '1'
        - Key: env
          Value: !Sub "subnet1"
        - Key: "Name"
          Value: !Sub  "${ProjectName}-PublicSubnet-1"
  
  PublicSubnetTwo:
    Type: AWS::EC2::Subnet
    DependsOn: Vpc
    Properties:
      AvailabilityZone: !Sub "${Region}b"
      CidrBlock: !Ref Subnet2cidr
      MapPublicIpOnLaunch: true
      VpcId: !Ref Vpc
      Tags:
        - Key: kubernetes.io/role/elb
          Value: '1'
        - Key: env
          Value: !Sub "subnet2"
        - Key: "Name"
          Value: !Sub  "${ProjectName}-PublicSubnet-2"

  PrivateSubnetThree:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Sub "${Region}a"
      CidrBlock: !Ref Subnet3cidr
      MapPublicIpOnLaunch: false
      VpcId: !Ref Vpc
      Tags:
        - Key: kubernetes.io/role/internal-elb
          Value: '1'
        - Key: env
          Value: !Sub "subnet3"
        - Key: "Name"
          Value: !Sub  "${ProjectName}-PrivateSubnet-3"

  PrivateSubnetFour:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Sub "${Region}b"
      CidrBlock: !Ref Subnet4cidr
      MapPublicIpOnLaunch: false
      VpcId: !Ref Vpc
      Tags:
        - Key: kubernetes.io/role/internal-elb
          Value: '1'
        - Key: env
          Value: !Sub "subnet4"
        - Key: "Name"
          Value: !Sub  "${ProjectName}-PrivateSubnet-4"

  ControlPlaneSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Communication between the control plane and worker nodegroups
      Tags:
      - Key: Name
        Value: cluster-ControlPlaneSecurityGroup
      VpcId: !GetAtt Vpc.VpcId

  ControlPlane:
    Type: AWS::EKS::Cluster
    Properties:
      KubernetesNetworkConfig:
        IpFamily: ipv4
        ServiceIpv4Cidr: 192.168.0.0/16
      Name: bachtn-udacity-cluster
      ResourcesVpcConfig:
        EndpointPrivateAccess: false
        EndpointPublicAccess: true
        SecurityGroupIds:
        - Ref: ControlPlaneSecurityGroup
        SubnetIds:
          - !GetAtt PrivateSubnetThree.SubnetId
          - !GetAtt PrivateSubnetFour.SubnetId
      RoleArn: !GetAtt ServiceRole.Arn
      Tags:
      - Key: Name
        Value: cluster-ControlPlane
      - Key: ProjectName
        Value: !Sub ${ProjectName}
      Version: '1.25'
  ServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: cluster-ServiceRole
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - Fn::FindInMap:
              - ServicePrincipalPartitionMap
              - Ref: AWS::Partition
              - EKS
        Version: '2012-10-17'
      ManagedPolicyArns:
      - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/AmazonEKSClusterPolicy
      - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/AmazonEKSVPCResourceController
      Tags:
      - Key: Name
        Value: cluster-ServiceRole